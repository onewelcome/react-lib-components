/*!
 * Copyright 2022 OneWelcome B.V.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

@use "../../../mixins.module.scss";
@use "../../../variables.scss";

$borderRadius: 2.5rem;

.toggle-wrapper {
  display: flex;
  align-items: center;
  position: relative;

  label {
    white-space: nowrap;
  }

  &--left {
    > div > div {
      flex-direction: row-reverse;
      position: relative;

      input {
        left: initial;
        right: 0;
      }

      label {
        margin-left: 0;
        margin-right: 0.5rem;
      }

      + div {
        margin-left: 0;
      }
    }
  }

  &--hide-label {
    > div > div {
      label {
        display: none;
      }

      + div {
        margin-left: 0;
      }
    }
  }

  &--wrap {
    label {
      white-space: normal;
    }
  }

  &--neutral {
    input:checked + span {
      background-color: var(--color-blue-grey500);
    }

    input + span {
      &:after {
        color: var(--color-blue-grey500);
      }
    }
  }

  &--between {
    width: 100%;

    > div {
      width: 100%;

      > div {
        justify-content: space-between;
      }
    }

    &.toggle-wrapper--right {
      > div > div {
        + div {
          margin-left: 0;
          text-align: right;
        }
      }
    }
  }

  &--disabled {
    input + span {
      background-color: var(--color-blue-grey50);

      &:before {
        background-color: var(--color-blue-grey200);
      }

      &:after {
        color: var(--color-blue-grey50);
      }
    }

    input:checked + span {
      background-color: var(--color-blue-grey200);

      &:before {
        background-color: var(--color-blue-grey50);
      }

      &:after {
        color: var(--color-blue-grey200);
      }
    }
  }
}

.toggle {
  width: 2rem;
  min-width: 2rem;
  height: 1.25rem;
  background-color: var(--toggle-background-color);
  border-radius: $borderRadius;
  position: relative;
  @include mixins.transition(background-color, 0.2s, ease-in-out);
  display: block;
  pointer-events: none;

  &:before {
    content: "";
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    display: block;
    background-color: var(--light);
    position: absolute;
    top: 50%;
    transform: translateY(-50%) translateX(0);
    left: 0.125rem;
    @include mixins.transition(transform, 0.2s, ease-in-out);
  }

  &:after {
    content: "\e927";
    font-family: "icomoon";
    position: absolute;
    font-size: 0.4375rem;
    top: 47%;
    left: 0.4rem;
    transform: translateY(-50%) translateX(0);
    color: var(--color-primary);
    @include mixins.transition(transform, 0.2s, ease-in-out);
  }

  &.checked {
    background-color: var(--color-primary);

    &:before {
      transform: translateY(-50%) translateX(calc(100% - 0.25rem));
    }

    &:after {
      transform: translateY(-50%) translateX(calc(170%));
      content: "\e938";
    }
  }

  &.disabled {
    cursor: not-allowed;
  }
}

.toggle-helper {
  margin-left: 2.5rem;
}

.checkbox {
  z-index: variables.$toggle-z-index;
  position: static;
  & > div:first-child {
    display: flex;
    align-items: flex-start;
  }

  input {
    width: 2rem;
  }

  input ~ [data-icon][aria-hidden] {
    display: none;
  }

  input:focus-visible {
    + * {
      border-radius: $borderRadius;
      outline-offset: 0.125rem;
      outline-width: 0.125rem;
    }
  }
}
